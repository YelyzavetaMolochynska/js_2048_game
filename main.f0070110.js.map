{"version":3,"sources":["scripts/main.js"],"names":["board","score","rows","columns","gameField","document","querySelector","gameScore","button","startMessage","winMessage","loseMessage","setGame","r","c","fieldCell","createElement","num","id","toString","updateFieldCell","append","hasEmptyFieldCell","achieve2048","getElementById","innerText","classList","remove","setTwo","found","Math","floor","random","newNumber","el","add","value","slide","row","slideRow","filter","i","length","push","slideLeft","slideRight","reverse","slideUp","slideDown","lastMove","window","onload","addEventListener","e","contains","replace","tile","code"],"mappings":"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","file":"main.f0070110.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nlet board;\nlet score = 0;\nconst rows = 4;\nconst columns = 4;\nconst gameField = document.querySelector('.game-field');\nconst gameScore = document.querySelector('.game-score');\nconst button = document.querySelector('.button');\nconst startMessage = document.querySelector('.message-start');\nconst winMessage = document.querySelector('.message-win');\nconst loseMessage = document.querySelector('.message-lose');\n\nwindow.onload = function() {\n  setGame();\n};\n\nfunction setGame() {\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const fieldCell = document.createElement('div');\n      const num = board[r][c];\n\n      fieldCell.id = r.toString() + '-' + c.toString();\n      updateFieldCell(fieldCell, num);\n      gameField.append(fieldCell);\n    }\n  }\n}\n\nbutton.addEventListener('click', (e) => {\n  if (button.classList.contains('start')) {\n    button.classList.replace('start', 'restart');\n    button.innerText = 'Restart';\n    startMessage.classList.add('hidden');\n\n    setTwo();\n    setTwo();\n  } else {\n    button.classList.replace('restart', 'start');\n    button.innerText = 'Start';\n    startMessage.classList.remove('hidden');\n    loseMessage.classList.add('hidden');\n\n    board = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    for (let r = 0; r < rows; r++) {\n      for (let c = 0; c < columns; c++) {\n        const tile = document.getElementById(`${r}-${c}`);\n\n        tile.innerText = '';\n        tile.classList.value = '';\n        tile.classList.add('field-cell');\n\n        winMessage.classList.add('hidden');\n      }\n    }\n\n    score = 0;\n    gameScore.innerText = score;\n  }\n});\n\nfunction hasEmptyFieldCell() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 0) {\n        return true;\n      }\n    }\n  }\n}\n\nfunction achieve2048() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const fieldCell = document.getElementById(r.toString()\n        + '-' + c.toString());\n\n      if (fieldCell.innerText === '2048') {\n        winMessage.classList.remove('hidden');\n      }\n    }\n  }\n}\n\nfunction setTwo() {\n  if (!hasEmptyFieldCell()) {\n    return;\n  }\n\n  let found = false;\n\n  while (!found) {\n    const r = Math.floor(Math.random() * rows);\n    const c = Math.floor(Math.random() * columns);\n\n    const newNumber = [2, 2, 2, 2, 2, 2, 2, 2, 2, 4];\n    const el = Math.floor(Math.random() * 10);\n\n    if (board[r][c] === 0) {\n      board[r][c] = newNumber[el];\n\n      const fieldCell = document.getElementById(r.toString()\n        + '-' + c.toString());\n\n      fieldCell.innerText = newNumber[el];\n      fieldCell.classList.add('field-cell--' + newNumber[el].toString());\n      found = true;\n    }\n  }\n}\n\nfunction updateFieldCell(fieldCell, num) {\n  fieldCell.innerText = '';\n  fieldCell.classList.value = '';\n  fieldCell.classList.add('field-cell');\n\n  if (num > 0) {\n    fieldCell.innerText = num;\n\n    num <= 2048\n      ? fieldCell.classList.add('field-cell--' + num.toString())\n      : fieldCell.classList.add('field-cell--2048');\n  }\n}\n\ndocument.addEventListener('keyup', (e) => {\n  if (startMessage.classList.contains('hidden')) {\n    switch (e.code) {\n      case 'ArrowLeft':\n        slideLeft();\n        break;\n      case 'ArrowRight':\n        slideRight();\n        break;\n      case 'ArrowUp':\n        slideUp();\n        break;\n      case 'ArrowDown':\n        slideDown();\n        break;\n      default:\n        setTwo();\n    }\n    achieve2048();\n    gameScore.innerText = score;\n\n    if (!lastMove()) {\n      loseMessage.classList.remove('hidden');\n    }\n  }\n});\n\nfunction slide(row) {\n  let slideRow = row.filter(num => num !== 0);\n\n  for (let i = 0; i < slideRow.length - 1; i++) {\n    if (slideRow[i] === slideRow[i + 1]) {\n      slideRow[i] *= 2;\n      slideRow[i + 1] = 0;\n      score += slideRow[i];\n    }\n  }\n  slideRow = slideRow.filter(num => num !== 0);\n\n  while (slideRow.length < columns) {\n    slideRow.push(0);\n  }\n\n  return slideRow;\n}\n\nfunction slideLeft() {\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n\n    row = slide(row);\n    board[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const fieldCell = document.getElementById(r.toString()\n        + '-' + c.toString());\n      const num = board[r][c];\n\n      updateFieldCell(fieldCell, num);\n    }\n  }\n}\n\nfunction slideRight() {\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n    board[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const fieldCell = document.getElementById(r.toString()\n        + '-' + c.toString());\n      const num = board[r][c];\n\n      updateFieldCell(fieldCell, num);\n    }\n  }\n}\n\nfunction slideUp() {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row = slide(row);\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = row[c];\n\n      const fieldCell = document.getElementById(r.toString()\n        + '-' + c.toString());\n      const num = board[r][c];\n\n      updateFieldCell(fieldCell, num);\n    }\n  }\n}\n\nfunction slideDown() {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = row[c];\n\n      const fieldCell = document.getElementById(r.toString()\n        + '-' + c.toString());\n      const num = board[r][c];\n\n      updateFieldCell(fieldCell, num);\n    }\n  }\n}\n\nfunction lastMove() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 1; c < columns; c++) {\n      if (board[r][c - 1] === board[r][c]) {\n        return true;\n      }\n    }\n  }\n\n  for (let c = 0; c < columns; c++) {\n    for (let r = 1; r < rows; r++) {\n      if (board[r - 1][c] === board[r][c]) {\n        return true;\n      }\n    }\n  }\n}\n"]}